#!/bin/bash
#
# Bootstraps the machine by sourcing all scripts in ./bootstrap.d/

set -euo pipefail
[ -n "${DEBUG:-}" ] && set -x

bold='\e[1;39m'
green='\e[32m'
white='\e[37m'
yellow='\e[33m'
reset='\e[0m'

has() { command -v "$1" &>/dev/null; }
interactive() { [ -z "${NONINTERACTIVE:-}" ] && [ -t 0 ]; }
debug() { printf "${green}[bootstrap]${reset} %s...\n" "$@"; }
debugw() { printf "${yellow}[bootstrap]${reset} %s!\n" "$@"; }
log() { printf "${bold}${green}==>${white} %s${reset}\n" "$@"; }
logw() { printf "${bold}${yellow}==>${white} %s${reset}\n" "$@"; }

confirm() {
    if ! interactive; then
        return
    fi
    # shellcheck disable=SC2059
    printf "$1"
    read -rn1
    printf "\e[2K\r" # clear line
    [[ $REPLY =~ ^[Yy]$ ]]
}

log "Running bootstrap"

if [ -z "$(yadm config local.class)" ] && interactive && confirm "Is this your ${bold}${white}home${reset} computer? (y/n)"; then
    yadm config local.class Home
fi

for file in "${BASH_SOURCE[0]}.d"/*.sh; do
    [[ $file =~ "##" ]] && continue
    filename=$(basename "${file%.sh}")

    # Allow skipping certain scripts
    if ! confirm "Configure ${bold}${white}${filename}${reset}? (y/n)"; then
        logw "Skipping $filename"
        continue
    fi

    log "Configuring $filename"
    # shellcheck source=/dev/null
    source "$file"
    echo
done

log "Bootstrap done! Entering fish..."

if has fish; then
    exec fish -il
fi
