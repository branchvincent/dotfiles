#!/bin/bash
#
# Bootstraps the machine by sourcing all scripts in ./bootstrap.d/

set -euo pipefail
[ -n "${DEBUG:-}" ] && set -x

bold='\e[1;39m'
green='\e[32m'
white='\e[37m'
yellow='\e[33m'
reset='\e[0m'

confirm() {
    if [ -n "${NONINTERACTIVE:-}" ] || [ ! -t 0 ]; then
        return
    fi
    printf "Configure ${bold}${white}%s${reset}? (y/n)" "$1"
    read -rn1
    printf "\e[2K\r" # clear line
    [[ $REPLY =~ ^[Yy]$ ]]
}

has() {
    command -v "$1" &>/dev/null
}

debug() {
    printf "${green}[bootstrap]${reset} %s...\n" "$@"
}

log() {
    printf "${bold}${green}==>${white} %s${reset}\n" "$@"
}

warn() {
    printf "${bold}${yellow}==>${white} %s${reset}\n" "$@"
}

log "Running bootstrap"

for file in $(GLOBIGNORE='*##*' && echo "${BASH_SOURCE[0]}.d"/*.sh); do
    filename=$(basename "${file%.sh}")

    # Allow skipping certain scripts (e.g. YADM_BOOTSTRAP_FILTER='^(brew|macos)$')
    if ! confirm "$filename" || [[ ! $filename =~ ${YADM_BOOTSTRAP_FILTER:-.*} ]]; then
        warn "Skipping $filename"
        continue
    fi

    log "Configuring $filename"
    source "$file"
    echo
done

log "Bootstrap done!"
